<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2020.3.1</title>
      <link href="/2020/03/01/2020-3-1/"/>
      <url>/2020/03/01/2020-3-1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言和C++开发的学习路线</title>
      <link href="/2020/02/29/C++Studyline/"/>
      <url>/2020/02/29/C++Studyline/</url>
      
        <content type="html"><![CDATA[<h1 id="overview"><a href="#overview" class="headerlink" title="overview"></a>overview</h1><p>害，都大三下学期了，感觉自己啥也没学到，不会写的代码还是不会写，面对各类课程实验有时还是有点恐惧心理。</p><p>说到底还是自己菜，能力不太行，学校学的东西远远不够。而原本想暑假找份实习在公司里摸爬滚打一下，面试的时候被面试官问得一问三不知，才知道原来自己真的好像没学到什么东西，整个学习路线也不清晰。</p><p>在B站碰巧那几天看到 <a href="https://www.bilibili.com/video/av91838886" target="_blank" rel="noopener">Codesheep发的C语言和C++的学习路线</a>  才明白自己学到的真的少之又少。</p><p>这里依据视频总结一下C/C++开发的学习路线，勉励自己按照此路线好好学习。<br>(ง •_•)ง加油吧，骚年！</p><h1 id="C-C-基本语法，编程思想学习"><a href="#C-C-基本语法，编程思想学习" class="headerlink" title="C/C++基本语法，编程思想学习"></a>C/C++基本语法，编程思想学习</h1><p>企业级开发不会在Windows下，都是Linux！<br>推荐书籍<br> 《C Primer Plus》,《 C和指针》，《C专家编程》</p><h1 id="数据结构与算法"><a href="#数据结构与算法" class="headerlink" title="数据结构与算法"></a>数据结构与算法</h1><p>直接决定能不能找到技术岗职位，技术岗很多要求在线编程解算法题</p><p>字符串，链表，树，堆栈，哈希表等…<br>刷一刷leetcode，剑指offer</p><p>之前我也刷过题，但是刷过以后，很久不碰又忘得一干二净┭┮﹏┭┮，有学业的原因也有自己迷惘的原因，今后争取刷题的时候写一下博客！</p><h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><p>面试经常问各种问题，基本围绕在TCP/IP协议栈里</p><p>各种协议的原理要知道，七层五层了解</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HTTP&#x2F;HTTPS</span><br><span class="line">TCP&#x2F;UDP</span><br><span class="line">IP,ARP,ICMP</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div><p>推荐书籍:《TCP/IP详解》</p><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><p>进程和线程<br>进程间通信方式<br>并发，原子性，锁<br>内存，内存调度算法<br>推荐书籍：《深入理解操作系统》CSAPP</p><h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><p>23种不一定都要会，但是基本的一定要掌握</p><blockquote><p>单例、工厂、代理、策略模式，模板方法</p></blockquote><p>推荐书籍：《大话设计模式》</p><p><del>设计模式我目前一窍不通，一点都不知道</del>/(ㄒoㄒ)/</p><h1 id="应用与编程实践"><a href="#应用与编程实践" class="headerlink" title="应用与编程实践"></a>应用与编程实践</h1><p><del>这块我也完全扑该</del></p><p>Linux操作系统基本指令，掌握 <strong>shell编程</strong> <strong>脚本</strong>等等<br>book：鸟哥的Linux私房菜 或 Linux就该这么学</p><p>编译/调试工具 <strong>Linux平台上 gcc 以及makefile</strong><br>book：跟我一起写makefile，GNU官方关于GCC和GDB的官方文档。</p><p>要会写 gdb调试工具，推荐中文版《debugging with gdb》</p><p><strong>Linux系统编程</strong><br>多线程编程 网络编程<br>book：《unix环境高级编程》《Linux高性能服务器编程》《POSIX多线程程序设计》</p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello,Hexo! Windows平台下搭建自己的个人博客</title>
      <link href="/2020/02/28/Hello-Hexo-Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2020/02/28/Hello-Hexo-Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Motivation"><a href="#Motivation" class="headerlink" title="Motivation"></a>Motivation</h1><p>刚进大学就看到很多程序员总结作为技术人应该写技术博客，写博客的诸多益处就不赘述了。</p><p>去年(2019年)的某一天，在B站推送里看到了B站UP主<em>CodeSheep</em>的视频更加有了想做博客的冲动，奈何学业繁忙，计划这个寒假做博客的，由于沉迷逛B站看剧<del>无法自拔</del>，一直拖到现在╮(╯▽╰)╭，现在能把博客做起来还是挺开心的o(= ￣▽￣=)ブ</p><h1 id="OverView"><a href="#OverView" class="headerlink" title="OverView"></a>OverView</h1><p>搭建博客时间：2020.2.28 - 2020.2.29</p><p>框架：<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></p><p>主题：<a href="https://jerryc.me/posts/21cfbf15/" target="_blank" rel="noopener">Butterfly</a></p><p>首先参考了<em>CodeSheep</em>的B站视频，但是由于这个视频是使用MACBook开发的，也就是macOS系统，和在Windows下开发还是有点区别，我跟着做的时候踩了很多坑。后面又找了CSDN上的一篇在windows下搭建博客的文章做参考，主题是在<em>知乎</em>上找的。<br>搭建Hexo花了一天，配主题花了一天。期间遇到的问题也搜集了很多博客，这里向我参考过的所有资料以及视频致谢！</p><p>最后贴上相关链接<br><a href="https://www.bilibili.com/video/av44544186?from=search&seid=17806130726575110106" target="_blank" rel="noopener">CodeSheep_Bilibili视频</a><br><a href="https://blog.csdn.net/qq_36759224/article/details/82121420?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">使用 Github Pages 和 Hexo 搭建自己的独立博客_CSDN</a></p><h1 id="Process"><a href="#Process" class="headerlink" title="Process"></a>Process</h1><hr><h2 id="0-Hexo？"><a href="#0-Hexo？" class="headerlink" title="0  Hexo？"></a>0  Hexo？</h2><p><strong>Hexo</strong>是基于<strong>node.js</strong>制作的一个快速、简洁且高效的博客框架。<br>Hexo 可以将我们通过<strong>Markdown</strong>编写的文章生成静态的html页面，可托管在<strong>Github page</strong>上，不需要额外配置服务器。</p><h2 id="1-安装Git，配置ssh密钥"><a href="#1-安装Git，配置ssh密钥" class="headerlink" title="1 安装Git，配置ssh密钥"></a>1 安装Git，配置ssh密钥</h2><p>由于之前已经在电脑里配置好Git以及ssh,这一步我直接略过了。</p><p>配置Git可参考廖雪峰老师的<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">Git教程</a></p><p><strong>Tips:安装完Git可使用Git bash里敲命令行了，进入某文件目录右键即可点击Git bash，不需要cmd了</strong></p><h2 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2 安装nodejs"></a>2 安装nodejs</h2><p>需要安装nodejs以及里面的npm工具<br>（<del>不知为何我配置的时候总是把npm打成nmp</del>  ╮(╯▽╰)╭）<br>Windows：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a>选择LTS版本</p><p><a href="https://pic.downk.cc/item/5e5b18b16127cc071366038e.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://pic.downk.cc/item/5e5b18b16127cc071366038e.png" class="lazyload"></a></p><h2 id="3-安装-amp-初始化-Hexo"><a href="#3-安装-amp-初始化-Hexo" class="headerlink" title="3 安装&amp;初始化 Hexo"></a>3 安装&amp;初始化 Hexo</h2><h3 id="3-1-安装Hexo"><a href="#3-1-安装Hexo" class="headerlink" title="3.1 安装Hexo"></a>3.1 安装Hexo</h3><p>创建一个文件夹blog，在此文件夹下打开Git bash，使用下面的命令安装Hexo：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></div><p>我使用了淘宝镜像加速</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli --registry&#x3D;http:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure></div><p><strong>Tips:安装完Git &amp; nodejs &amp; Hexo都可在命令行里查看版本验证是否安装成功</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git -version</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></div><p>现在该安装的就已经全部安装完毕</p><h3 id="3-2-初始化hexo"><a href="#3-2-初始化hexo" class="headerlink" title="3.2 初始化hexo"></a>3.2 初始化hexo</h3><p>在blog文件夹里打开Git bash，使用下面的命令初始化hexo：<br><code>hexo init hexo</code><br>运行后blog文件夹下会下新建一个文件夹hexo(上面命令里第二个hexo可任取名字)</p><p><a href="https://s2.ax1x.com/2020/03/01/3c8SC8.jpg" data-fancybox="group" data-caption="3c8SC8.jpg" class="fancybox"><img alt="3c8SC8.jpg" title="3c8SC8.jpg" data-src="https://s2.ax1x.com/2020/03/01/3c8SC8.jpg" class="lazyload"></a></p><p>进入hexo文件夹里打开Git bash，运行以下命令：<br><code>npm install</code></p><p>新建完成后，文件夹目录下有:<br><a href="https://s2.ax1x.com/2020/03/01/3c8VU0.png" data-fancybox="group" data-caption="3c8VU0.png" class="fancybox"><img alt="3c8VU0.png" title="3c8VU0.png" data-src="https://s2.ax1x.com/2020/03/01/3c8VU0.png" class="lazyload"></a><br>其中</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">node_modules: 依赖包</span><br><span class="line">public：存放生成的页面</span><br><span class="line">scaffolds：生成文章的一些模板</span><br><span class="line">source：用来存放文章</span><br><span class="line">themes：主题</span><br><span class="line">_config.yml: 博客的配置文件</span><br></pre></td></tr></table></figure></div><p>在hexo目录下命令行运行：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></div><p>打开 <a href="http://localhost:4000/" target="_blank" rel="noopener">localhost:4000</a> 即可看见最初始的Hexo界面:<br><a href="https://s2.ax1x.com/2020/03/01/3c8LzF.jpg" data-fancybox="group" data-caption="3c8LzF.jpg" class="fancybox"><img alt="3c8LzF.jpg" title="3c8LzF.jpg" data-src="https://s2.ax1x.com/2020/03/01/3c8LzF.jpg" class="lazyload"></a></p><h2 id="4-将hexo部署到github-page上"><a href="#4-将hexo部署到github-page上" class="headerlink" title="4 将hexo部署到github page上"></a>4 将hexo部署到github page上</h2><p>登录GitHub.com后看到一个New repository，新建仓库</p><p>仓库命名要注意<strong>必须创建</strong>一个名称为你用户名后面加.github.io的仓库，<br>只有这样，将来要部署到GitHub page的时候，才会被识别。</p><p>也就是仓库名必须是 xxx.github.io   其中xxx就是你注册GitHub的用户名</p><p><strong>例如</strong>我的github用户名是BelliumTang，则仓库名就是 BelliumTang.github.io</p><p>由于之前已经配置过ssh，所以这里不需要再配置，没有配置请记得配置后再进行以下操作。<br><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896954117292416" target="_blank" rel="noopener">可参考廖雪峰老师Git教程远程仓库ssh配置</a></p><p>最后就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开hexo文件夹下配置文件 _config.yml，翻到最后，修改为:(YourGithubName就是你自己的GitHub账户)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;YourGithubName&#x2F;YourGithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></div><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p><p><code>npm install hexo-deployer-git --save</code></p><blockquote><p>安装deloy-git提示：<br> <a href="https://s2.ax1x.com/2020/02/29/3sQDaD.png" data-fancybox="group" data-caption="3sQDaD.png" class="fancybox"><img alt="3sQDaD.png" title="3sQDaD.png" data-src="https://s2.ax1x.com/2020/02/29/3sQDaD.png" class="lazyload"></a></p></blockquote><blockquote><p><strong>踩坑点</strong><br>  1.配置文件 <code>_config.yml</code> 里每个冒号后面都需要有空格，不然会出错<br>  2.下图中的错误： <code>repository</code> 后的地址必须按上文所说的以<code>https</code>开头的git仓库地址,不然也会出错<br>  <a href="https://s2.ax1x.com/2020/02/29/3sQNx1.png" data-fancybox="group" data-caption="3sQNx1.png" class="fancybox"><img alt="3sQNx1.png" title="3sQNx1.png" data-src="https://s2.ax1x.com/2020/02/29/3sQNx1.png" class="lazyload"></a></p></blockquote><p>最后在git bash中运行以下命令：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></div><p>其中:<br>hexo clean清除了你之前生成的缓存。可缩写<br>hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写<br>hexo deploy 部署文章，可以用hexo d缩写</p><p>注意deploy时可能要你输入username和password。</p><p>运行完成后，浏览器中打开 <a href="https://YourGithubName.github.io/" target="_blank" rel="noopener">https://YourGithubName.github.io/</a> 就可以看见你的博客了</p><h2 id="5-写自己的文章"><a href="#5-写自己的文章" class="headerlink" title="5 写自己的文章"></a>5 写自己的文章</h2><p>接下来你就可以正式开始写文章了。</p><p><code>hexo new name</code></p><p>name可以任取你喜欢的文章名称</p><p>然后在source/_post中打开name.md文件，就可以使用Markdown开始编辑了。<br>当你写完的时候，再运行</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></div><p>就部署成功了。</p><h2 id="6-换主题"><a href="#6-换主题" class="headerlink" title="6 换主题"></a>6 换主题</h2><p>Butterfly主题官方文档中有详细步骤，按照步骤来就好了：<br><a href="https://s2.ax1x.com/2020/03/01/3gJXTA.png" data-fancybox="group" data-caption="3gJXTA.png" class="fancybox"><img alt="3gJXTA.png" title="3gJXTA.png" data-src="https://s2.ax1x.com/2020/03/01/3gJXTA.png" class="lazyload"></a><br>注意首次换主题要记得安装pug以及stylus的渲染器</p><p>其他的例如：头像、标签等元素的配置按照文档一个一个去对照着去做就可以。</p><p>我下面列一个文档里没有提到的：</p><blockquote><p>如图所示如何修改浏览器框中的小图标？<br><a href="https://s2.ax1x.com/2020/03/01/32dl4J.png" data-fancybox="group" data-caption="32dl4J.png" class="fancybox"><img alt="32dl4J.png" title="32dl4J.png" data-src="https://s2.ax1x.com/2020/03/01/32dl4J.png" class="lazyload"></a></p></blockquote><blockquote><p>解决方案： 找到Butterfly主题里的配置文件 <code>_config.yml</code>更改<code>favicon</code><br><a href="https://s2.ax1x.com/2020/03/01/32dMEF.png" data-fancybox="group" data-caption="32dMEF.png" class="fancybox"><img alt="32dMEF.png" title="32dMEF.png" data-src="https://s2.ax1x.com/2020/03/01/32dMEF.png" class="lazyload"></a><br>其中<code>img</code>文件夹路径为：<br><a href="https://s2.ax1x.com/2020/03/01/32d3C9.png" data-fancybox="group" data-caption="32d3C9.png" class="fancybox"><img alt="32d3C9.png" title="32d3C9.png" data-src="https://s2.ax1x.com/2020/03/01/32d3C9.png" class="lazyload"></a></p></blockquote><p>至此就全部完成啦！o(*￣▽￣=)ブ</p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
